{"name":"p8hardware.json","topic":"Proto-8 Hardware","sections":[{"section":"Overview","entries":[{"data":["<p>desc. of features</p>"],"entry":"Purpose"},{"data":["<h4>Libraries of a certain type:</h4><ul><li>file1.h -- one line.</li><li>file2.h -- one line.</li><li>file3.h -- one line.</li></ul>"],"entry":"Contents"},{"data":["<p>XXX can be found on github: <a href=\"\">link</a></p>","<p>Clone the repo, or <a href=\"\">download as zip</a>, and place in Arduino's workspace libraries folder.</p>"],"entry":"Installation"},{"data":["<p>See examples for usage</p>"],"entry":"Usage"}]},{"section":"class LEDShiftRegister","entries":[{"entry":"Overview","data":["<p>desc.</p><h3>Todo:</h3><p>things</p>","<h3>Usage</h3>\n<p>IncludeCircularBuffer.h and create circular buffer as needed.</p>\n","<pre>\n#include &lt;CircularBuffer.h&gt;\n\nCircularBuffer<int> cBuffer(10)\n</pre>\n<center><i>Caption</i></center>\n"]},{"entry":".LEDShiftRegister(...)","data":["<h3>Full Function Definition</h3>","<pre>LEDShiftRegister();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i></i>","</li>","</ul>"]},{"entry":".begin(...)","data":["<h3>Full Function Definition</h3>","<pre>void begin();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".send(...)","data":["<h3>Full Function Definition</h3>","<pre>void send( uint8_t, uint8_t );</pre>","<h3>Parameters</h3>","<ul>","<li>","<i>uint8_t</i> -- Description","</li>","<li>","<i>uint8_t</i> -- Description","</li>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".send(...)","data":["<h3>Full Function Definition</h3>","<pre>void send();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".tick(...)","data":["<h3>Full Function Definition</h3>","<pre>void tick();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".store(...)","data":["<h3>Full Function Definition</h3>","<pre>void store( uint8_t, uint8_t );</pre>","<h3>Parameters</h3>","<ul>","<li>","<i>uint8_t</i> -- Description","</li>","<li>","<i>uint8_t</i> -- Description","</li>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".clear(...)","data":["<h3>Full Function Definition</h3>","<pre>void clear();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]}]},{"section":"class AnalogMuxTree","entries":[{"entry":"Overview","data":["<p>desc.</p><h3>Todo:</h3><p>things</p>","<h3>Usage</h3>\n<p>IncludeCircularBuffer.h and create circular buffer as needed.</p>\n","<pre>\n#include &lt;CircularBuffer.h&gt;\n\nCircularBuffer<int> cBuffer(10)\n</pre>\n<center><i>Caption</i></center>\n"]},{"entry":".AnalogMuxTree(...)","data":["<h3>Full Function Definition</h3>","<pre>AnalogMuxTree();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i></i>","</li>","</ul>"]},{"entry":".begin(...)","data":["<h3>Full Function Definition</h3>","<pre>void begin();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".scan(...)","data":["<h3>Full Function Definition</h3>","<pre>void scan();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".tick(...)","data":["<h3>Full Function Definition</h3>","<pre>void tick();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".fetch(...)","data":["<h3>Full Function Definition</h3>","<pre>uint16_t fetch( uint8_t );</pre>","<h3>Parameters</h3>","<ul>","<li>","<i>uint8_t</i> -- Description","</li>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>uint16_t</i>","</li>","</ul>"]}]},{"section":"class SwitchMatrix","entries":[{"entry":"Overview","data":["<p>desc.</p><h3>Todo:</h3><p>things</p>","<h3>Usage</h3>\n<p>IncludeCircularBuffer.h and create circular buffer as needed.</p>\n","<pre>\n#include &lt;CircularBuffer.h&gt;\n\nCircularBuffer<int> cBuffer(10)\n</pre>\n<center><i>Caption</i></center>\n"]},{"entry":".SwitchMatrix(...)","data":["<h3>Full Function Definition</h3>","<pre>SwitchMatrix();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i></i>","</li>","</ul>"]},{"entry":".begin(...)","data":["<h3>Full Function Definition</h3>","<pre>void begin();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".scan(...)","data":["<h3>Full Function Definition</h3>","<pre>void scan();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".tick(...)","data":["<h3>Full Function Definition</h3>","<pre>void tick();</pre>","<h3>Parameters</h3>","<ul>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]},{"entry":".fetch(...)","data":["<h3>Full Function Definition</h3>","<pre>uint8_t fetch( uint8_t );</pre>","<h3>Parameters</h3>","<ul>","<li>","<i>uint8_t</i> -- Description","</li>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>uint8_t</i>","</li>","</ul>"]},{"entry":".send(...)","data":["<h3>Full Function Definition</h3>","<pre>void send( uint16_t );</pre>","<h3>Parameters</h3>","<ul>","<li>","<i>uint16_t</i> -- Description","</li>","</ul>","<h3>Return</h3>","<ul>","<li>","<i>void</i>","</li>","</ul>"]}]}]}